

require duckpgq

statement ok
set experimental_path_finding_operator=true;

statement ok
select setseed(0.42);

statement ok
set threads=1;

query I
SELECT current_setting('experimental_path_finding_operator');
----
true

statement ok
CREATE TABLE pair(src BIGINT, dst BIGINT); INSERT INTO pair(src, dst) VALUES (0, 1), (1, 2), (2,0);

statement ok
create table student(id INT); INSERT INTO student(id) VALUES (10), (20), (30), (40);

statement ok
create table know(src INT, dst INT); INSERT INTO know(src, dst) VALUES (40, 20), (10,30), (10,10), (20,10), (30,10);

query III
with csr_cte as (
SELECT cast(min(create_csr_edge(
        0,
        (SELECT count(a.id) FROM Student a),
        CAST (
            (SELECT sum(create_csr_vertex(
                0,
                (SELECT count(a.id) FROM Student a),
                sub.dense_id,
                sub.cnt))
            FROM (
                SELECT a.rowid as dense_id, count(k.src) as cnt
                FROM Student a
                LEFT JOIN Know k ON k.src = a.id
                GROUP BY a.rowid) sub
            )
        AS BIGINT),
        (select count() FROM Know k JOIN student a on a.id = k.src JOIN student c on c.id = k.dst),
        a.rowid,
        c.rowid,
        k.rowid)) as bigint) as csr_id
    FROM Know k
    JOIN student a on a.id = k.src
    JOIN student c on c.id = k.dst)
SELECT src, dst, iterativelengthoperator(src, dst, csr_id) FROM pair, csr_cte;
----
0	1	NULL
1	2	2
2	0	1
