# name: test/sql/path_finding/undirected_paths.test
# group: [duckpgq]

require duckpgq

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter'), (4, 'David');

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, id BIGINT);INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (3,0, 13), (1,2, 14), (1,3, 15), (2,3, 16), (4,3, 17), (2, 4, 18);

statement ok
-CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student
    )
EDGE TABLES (
    know   SOURCE KEY (src) REFERENCES Student (id)
                DESTINATION KEY (dst) REFERENCES Student (id)
    );

query III
-FROM GRAPH_TABLE (pg
    MATCH
    o = ANY SHORTEST (a:Student WHERE a.id = 0)-[e:know]- *(b:Student)
    COLUMNS (a.id as a_id, b.id as b_id, path_length(o))
    ) study
----
0	1	1
0	2	1
0	3	1
0	4	2