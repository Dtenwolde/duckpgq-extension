# name: test/sql/pragma/create_vertex_table.test
# description: Testing the pragma create_vertex_table
# group: [duckpgq_sql_pragma]


require duckpgq

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, createDate BIGINT);INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (3,0, 13), (1,2, 14), (1,3, 15), (2,3, 16), (4,3, 17);

statement ok
pragma create_vertex_table(know, src, dst, v, id); 

statement ok
select * from v;

query I 
select count(*) from v; 
----
5

statement error
pragma create_vertex_table(know, src, dst, group, id);
----
Parser Error: syntax error at or near "group"

statement error
pragma create_vertex_table(know, nonexistingcolumn, dst, v2, id);
----
Binder Error: Referenced column "nonexistingcolumn" not found in FROM clause!

statement error
pragma create_vertex_table(know, src, nonexistingcolumn, v3, id);
----
Binder Error: Referenced column "nonexistingcolumn" not found in FROM clause!

statement error
pragma create_vertex_table(nonexistingtable, src, dst, v3, id);
----
Catalog Error: Table with name nonexistingtable does not exist!

statement error
pragma create_vertex_table(know, src, dst, v, id);
----
Catalog Error: Table with name "v" already exists!

statement error
pragma create_vertex_table(know, src, dst, v);
----
Binder Error: No function matches the given name and argument types 'create_vertex_table(VARCHAR, VARCHAR, VARCHAR, VARCHAR)'. You might need to add explicit type casts.

statement ok
create table person_knows_person(creationDate, Person1id, Person2id) as from 'duckdb/data/SNB0.003/person_knows_person.csv';

query I
select count(*) from person_knows_person;
----
83

statement ok
pragma create_vertex_table(person_knows_person, person1id, person2id, v4, id);

query I
select count(*) from v4;
----
39

